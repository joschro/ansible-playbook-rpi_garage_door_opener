---
# tasks file for role wiringpi

- name: Ensure required packages are installed
  package:
    name: python-devel,gcc
    state: present
  tags: gpio 

- name: Download latest WebIOPi
  get_url:
    url: "https://sourceforge.net/projects/webiopi/files/latest/download?source=files"
    dest: /tmp/WebIOPi.tar.gz
  tags: gpio

- name: Unpack WebIOPi
  unarchive:
    src: /tmp/WebIOPi.tar.gz
    dest: /tmp/
  tags: gpio

- name: Provide answer file
  lineinfile:
    path: /tmp/answer.txt
    line: n
    create: yes
  tags: gpio

- name: Patch WebIOPi
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  with_items:
    - { src: 'files/cpuinfo.c', dest: '/tmp/WebIOPi-0.7.1/python/native/cpuinfo.c' }
    - { src: 'files/gpio.c', dest: '/tmp/WebIOPi-0.7.1/python/native/gpio.c' }
    - { src: 'files/version.py', dest: '/tmp/WebIOPi-0.7.1/python/webiopi/utils/version.py' }
    - { src: 'files/webiopi.js', dest: '/tmp/WebIOPi-0.7.1/htdocs/webiopi.js' }
  tags: gpio

- name: Build WebIOPi
  command:
    cmd: "sh ./setup.sh skip-apt < /tmp/answer.txt"
  args:
    chdir: /tmp/WebIOPi-0.7.1
  tags: gpio

#- name: Ensure the default Apache port is 8080
#  lineinfile:
#    path: /etc/httpd/conf/httpd.conf
#    regexp: '^Listen '
#    insertafter: '^#Listen '
#    line: Listen 8080
#  tags: gpio

- name: Update webiopi config - GPIO
  blockinfile:
    path: /etc/webiopi/config
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR GPIO"
    insertafter: "^.GPIO"
    backup: yes
    block: |
      2 = OUT 0
      3 = OUT 0
  tags: gpio

- name: Update webiopi config - SCRIPTS
  lineinfile:
    path: /etc/webiopi/config
    insertafter: "^.SCRIPTS"
    line: "myscript = /root/webiopi/scripts/notify.py"
  tags: gpio

- name: Update webiopi config - REST
  blockinfile:
    path: /etc/webiopi/config
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR REST"
    insertafter: "^.REST"
    block: |
      gpio-export = 2, 3
      gpio-post-function = false 
  tags: gpio

- name: Update webiopi config - ROUTES
  blockinfile:
    path: /etc/webiopi/config
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR ROUTES"
    insertafter: "^.ROUTES"
    block: |
      /dus/garage = /GPIO/2
      /dus/garagetest = /GPIO/3
  tags: gpio

- name: Update webiopi passwd
  lineinfile:
    path: /etc/webiopi/passwd
    regex: "^"
    line: "03d189bedf4755fbd94ea9f0248f81c404ef7f14654692cd8d2b949ae8e4b62e"
  tags: gpio

- name: Create directory if it does not exist
  file:
    path: /root/webiopi/scripts
    state: directory
    mode: u=rwx,g=rwx,o=rx
  tags: gpio

- name: Install notify.py script
  template:
    src: notify.py.jp2
    dest: /root/webiopi/scripts/notify.py
    mode: u=rwx,g=rwx,o=r
  tags: gpio

- name: Install notifyTelegram.sh script
  template:
    src: notifyTelegram.sh.jp2
    dest: /root/webiopi/scripts/notifyTelegram.sh
    mode: u=rwx,g=rwx,o=r
  tags: gpio

- name: Install systemd service
  copy:
    src: "files/webiopi.service"
    dest: "/etc/systemd/system/webiopi.service"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags: gpio

- name: Force systemd to reread config, enable and start service
  systemd:
    name: webiopi
    state: restarted
    daemon_reload: yes
    enabled: yes
  tags: gpio
